{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "/Users/adam.collier/Desktop/remix-twitter-bookmarks/app/root.tsx", "/Users/adam.collier/Desktop/remix-twitter-bookmarks/app/routes/getAllBookmarks.tsx", "../app/utils/session.server.ts", "/Users/adam.collier/Desktop/remix-twitter-bookmarks/app/routes/login.callback.tsx", "/Users/adam.collier/Desktop/remix-twitter-bookmarks/app/routes/bookmarks.tsx", "/Users/adam.collier/Desktop/remix-twitter-bookmarks/app/routes/bookmarks/index.tsx", "../app/components/Tweet.tsx", "../app/utils/utils.ts", "../app/routes/bookmarks.tsx", "/Users/adam.collier/Desktop/remix-twitter-bookmarks/app/routes/logout.tsx", "/Users/adam.collier/Desktop/remix-twitter-bookmarks/app/routes/index.tsx", "/Users/adam.collier/Desktop/remix-twitter-bookmarks/app/routes/login.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type { MetaFunction } from '@remix-run/node';\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from '@remix-run/react';\n\nimport reset from '@unocss/reset/tailwind.css';\nimport unocss from '~/styles/uno.css';\n\nexport const meta: MetaFunction = () => ({\n  charset: 'utf-8',\n  title: 'New Remix App',\n  viewport: 'width=device-width,initial-scale=1',\n});\n\nexport const links = () => [\n  { rel: 'stylesheet', href: reset },\n  { rel: 'stylesheet', href: unocss },\n];\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import type { LoaderFunction } from '@remix-run/node'\nimport { redirect } from '@remix-run/node'\nimport { json } from '@remix-run/node'\nimport { getUser } from '~/utils/session.server'\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const user = await getUser(request)\n  if (!user) {\n    return redirect('/')\n  }\n  const { id, access_token } = user\n\n  // let's get all of the users bookmarks here and return them to the client to persist locally\n  // as it stands we can only get 100 at a time with a potential max of 800\n  let bookmarks = {\n    data: [] as string[],\n    includes: {},\n  }\n\n  const getBookmarks = async (token) => {\n    const bookmarksUrl = new URL(\n      `https://api.twitter.com/2/users/${id}/bookmarks`\n    )\n\n    if (token) {\n      bookmarksUrl.searchParams.append('pagination_token', token)\n    }\n\n    bookmarksUrl.searchParams.append(\n      'tweet.fields',\n      'context_annotations,created_at'\n    )\n    bookmarksUrl.searchParams.append(\n      'expansions',\n      'author_id,attachments.media_keys'\n    )\n    bookmarksUrl.searchParams.append(\n      'user.fields',\n      'verified,profile_image_url'\n    )\n    bookmarksUrl.searchParams.append('media.fields', 'type,url,width,height')\n\n    const response = await fetch(bookmarksUrl.toString(), {\n      headers: {\n        Accept: 'application/json',\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${access_token}`,\n      },\n    })\n\n    const json = await response.json()\n\n    // bookmarks.data is an array so its easy peasy\n    bookmarks.data = [...bookmarks.data, ...json.data]\n    // bookmarks.includes is json so we need to do a little more fiddling\n    bookmarks.includes = {\n      ...bookmarks.includes,\n      users: {\n        ...bookmarks.includes.users,\n        ...json.includes.users,\n      },\n      media: {\n        ...bookmarks.includes.media,\n        ...json.includes.media,\n      },\n    }\n\n    if (json.meta.next_token) {\n      await getBookmarks(json.meta.next_token)\n    }\n\n    return\n  }\n\n  await getBookmarks('')\n\n  return json(bookmarks)\n}\n", "import { createCookieSessionStorage, redirect } from '@remix-run/node';\n\nconst sessionSecret = process.env.SESSION_SECRET;\nif (!sessionSecret) {\n  throw new Error('SESSION_SECRET must be set');\n}\n\nconst sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: 'twitter_session',\n    // normally you want this to be `secure: true`\n    // but that doesn't work on localhost for Safari\n    // https://web.dev/when-to-use-local-https/\n    secure: process.env.NODE_ENV === 'production',\n    secrets: [sessionSecret],\n    sameSite: 'lax',\n    path: '/',\n    maxAge: 60 * 60 * 24 * 30,\n    httpOnly: true,\n  },\n});\n\ntype User = {\n  access_token: string;\n  id: string;\n  name: string;\n  username: string;\n  expires_at: string;\n};\n\nexport async function createTwitterSession(user: User, redirectTo: string) {\n  const session = await sessionStorage.getSession();\n  session.set('user', user);\n  return redirect(redirectTo, {\n    headers: {\n      'Set-Cookie': await sessionStorage.commitSession(session),\n    },\n  });\n}\n\nexport async function getSession(request: Request) {\n  const cookie = request.headers.get('Cookie');\n  return sessionStorage.getSession(cookie);\n}\n\nexport async function getUser(request: Request): Promise<User | null> {\n  const session = await getSession(request);\n  const user = session.get('user');\n\n  // if there is no user return null\n  if (!user) {\n    return null;\n  }\n\n  return user;\n}\n\nexport const logout = async (request: Request) => {\n  const session = await getSession(request);\n  return redirect('/', {\n    headers: {\n      'Set-Cookie': await sessionStorage.destroySession(session),\n    },\n  });\n};\n", "import type { LoaderFunction } from '@remix-run/server-runtime'\nimport { redirect } from '@remix-run/server-runtime'\nimport { createTwitterSession } from '~/utils/session.server'\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  // grab the code we get in the callback\n  const requestUrl = new URL(request.url)\n  const code = requestUrl.searchParams.get('code')\n\n  if (!code) {\n    return redirect('/')\n  }\n  // create the params we will need;\n  const url = 'https://api.twitter.com/2/oauth2/token'\n  const params = new URLSearchParams()\n  params.append('grant_type', 'authorization_code')\n  params.append('client_id', process.env.TWITTER_CLIENT_ID as string)\n  params.append('redirect_uri', process.env.TWITTER_REDIRECT_URI as string)\n  params.append('code_verifier', 'challenge')\n  params.append('code', code)\n\n  // fetch the access token\n  const tokenResponse = await fetch(url, {\n    method: 'POST',\n    body: params,\n  })\n\n  // get the JSON\n  const tokenJSON = await tokenResponse.json()\n\n  // using the token we can now get the user\n  const userResponse = await fetch(\n    'https://api.twitter.com/2/users/me?user.fields=profile_image_url',\n    {\n      headers: {\n        Accept: 'application/json',\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${tokenJSON.access_token}`,\n      },\n    }\n  )\n\n  const { data: userJSON } = await userResponse.json()\n\n  const user = {\n    ...tokenJSON,\n    expires_at: new Date().getTime() + tokenJSON.expires_in * 1000,\n    ...userJSON,\n  }\n\n  return createTwitterSession(user, '/bookmarks')\n}\n", "import type { HeadersFunction, LoaderFunction } from '@remix-run/node'\nimport { json, redirect } from '@remix-run/node'\nimport { Form, Outlet, useLoaderData, useSearchParams } from '@remix-run/react'\nimport { atomWithStorage } from 'jotai/utils'\nimport { getUser, logout } from '~/utils/session.server'\n\nexport const userLookup = (userId: string, users: any) =>\n  users.find((user) => user.id === userId)\n\nexport function headers() {\n  return {\n    'Cache-Control': 'public, max-age=30, s-maxage=86400',\n  }\n}\n\n// this is the atom we will use to store all of our bookmarks\nexport const allBookmarksAtom = atomWithStorage('allBookmarks', null)\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  try {\n    const user = await getUser(request)\n\n    if (!user) {\n      return redirect('/')\n    }\n\n    // check whether the access token has expired\n    if (new Date(user.expires_at) < new Date()) {\n      return logout(request)\n    }\n\n    const { id, access_token } = user\n\n    let bookmarks = {\n      data: [] as string[],\n      includes: {\n        users: [] as string[],\n        media: [] as string[],\n      },\n    }\n\n    const getBookmarks = async (token) => {\n      const bookmarksUrl = new URL(\n        `https://api.twitter.com/2/users/${id}/bookmarks`\n      )\n\n      if (token) {\n        bookmarksUrl.searchParams.append('pagination_token', token)\n      }\n\n      bookmarksUrl.searchParams.append(\n        'tweet.fields',\n        'context_annotations,created_at'\n      )\n      bookmarksUrl.searchParams.append(\n        'expansions',\n        'author_id,attachments.media_keys'\n      )\n      bookmarksUrl.searchParams.append(\n        'user.fields',\n        'verified,profile_image_url'\n      )\n      bookmarksUrl.searchParams.append('media.fields', 'type,url,width,height')\n\n      const response = await fetch(bookmarksUrl.toString(), {\n        headers: {\n          Accept: 'application/json',\n          'Content-type': 'application/json',\n          Authorization: `Bearer ${access_token}`,\n        },\n      })\n\n      const json = await response.json()\n\n      // bookmarks.data is an array so its easy peasy\n      bookmarks.data = [...bookmarks.data, ...json.data]\n      // bookmarks.includes is json so we need to do a little more fiddling\n      bookmarks.includes = {\n        ...bookmarks.includes,\n        users: [...bookmarks.includes.users, ...json.includes.users],\n        media: [...bookmarks.includes.media, ...json.includes.media],\n      }\n\n      if (json.meta.next_token) {\n        await getBookmarks(json.meta.next_token)\n      }\n    }\n\n    await getBookmarks('')\n\n    return json(\n      {\n        user,\n        bookmarks,\n      },\n      {\n        headers: {\n          // max-age controls the browser cache\n          // s-maxage controls a CDN cache\n          'Cache-Control': 'public, max-age=30, s-maxage=86400',\n        },\n      }\n    )\n  } catch (err) {\n    console.log(err)\n  }\n}\n\n// const getAllBookmarks = async (setAllBookmarks) => {\n//   try {\n//     const response = await fetch('/getAllBookmarks')\n//     const json = await response.json()\n//     setAllBookmarks(json)\n//     return\n//   } catch (err) {\n//     console.log(err)\n//   }\n// }\n\nconst Bookmarks = () => {\n  const data = useLoaderData()\n  const { bookmarks, user } = data\n  // const [params] = useSearchParams()\n  // const query = params.get('query')\n\n  if (!bookmarks) {\n    return <p>we couldnt grab your bookmarks!</p>\n  }\n\n  return (\n    <main className=\"relative bg-[#15202B] flex\">\n      <section className=\"relative self-start sticky top-0 bg-[url(/bg_texture.webp)] p-8 max-w-sm space-y-4\">\n        <div className=\"flex space-x-2 items-center\">\n          <img\n            className=\"rounded-full w-12 h-12 bg-gray-200\"\n            src={user.profile_image_url}\n            alt=\"avatar\"\n          />\n          <div className=\"flex flex-col text-white\">\n            <p className=\"text-sm\">@{user.username}</p>\n            <Form className=\"leading-none\" action=\"/logout\" method=\"post\">\n              <button\n                className=\"text-zinc-300 text-xs underline\"\n                name=\"logout\"\n                aria-label=\"logout\"\n              >\n                Logout\n              </button>\n            </Form>\n          </div>\n        </div>\n        <p className=\"text-white text-sm\">\n          Let's help you find your bookmarks quickly and easily! Use the filters\n          below or freestyle it in the search bar.\n        </p>\n        <h3 className=\"text-white\">Show tweets by user...</h3>\n        {/* <div className=\"flex flex-wrap gap-1\">\n          {Array.from(allUsernames)\n            .slice(0, 10)\n            .map((username, index) => (\n              <Link\n                className={[\n                  'border border-white rounded-full px-4 py-2 text-sm',\n                  query === username ? 'bg-white text-[#15202B]' : 'text-white',\n                ].join(' ')}\n                key={index}\n                to={`/bookmarks?query=${username}`}\n              >\n                @{username as string}\n              </Link>\n            ))}\n        </div> */}\n      </section>\n      <div>\n        <img className=\"sticky h-screen md:top-0\" src=\"/page_tear.svg\" alt=\"\" />\n      </div>\n      <section className=\"bg-white bg-[url(/bg_texture.webp)] bg-fixed grow py-8\">\n        <Outlet />\n      </section>\n    </main>\n  )\n}\n\nexport default Bookmarks\n", "import { Form, useSearchParams } from '@remix-run/react'\nimport { useAtom } from 'jotai'\nimport { Tweet } from '~/components/Tweet'\nimport { useMatchesData } from '~/utils/utils'\nimport { userLookup } from '../bookmarks'\nimport { allBookmarksAtom } from '../bookmarks'\nimport { ClientOnly } from 'remix-utils'\n\nconst mediaLookup = (mediaId: string, mediaList: any) =>\n  mediaList.find((media) => media.media_key === mediaId)\n\nconst Bookmarks = () => {\n  const [allBookmarks] = useAtom(allBookmarksAtom)\n  const [params] = useSearchParams()\n  let queryValue = params.get('query')\n\n  const { bookmarks } = useMatchesData('routes/bookmarks')\n\n  if (queryValue) {\n    const results = bookmarks.data.filter((tweet: any) => {\n      const annotations =\n        tweet.context_annotations?.map(({ entity }) => entity.name) ?? []\n      const twitterUser = userLookup(tweet.author_id, bookmarks.includes.users)\n      const result = [\n        tweet.text,\n        twitterUser.name,\n        twitterUser.username,\n        ...annotations,\n      ].find((token) => token.toLowerCase().match(queryValue))\n\n      if (result) {\n        return tweet\n      }\n\n      return false\n    })\n\n    bookmarks.data = results\n  }\n\n  return (\n    <div className=\"max-w-md w-full mx-auto space-y-8\">\n      <div>\n        <Form>\n          <input\n            className=\"border border-zinc-800 w-full px-4 py-2.5 rounded-full\"\n            type=\"text\"\n            name=\"query\"\n            placeholder=\"Search tweets...\"\n            defaultValue={params.get('query') as string}\n          />\n        </Form>\n        <div className=\"flex justify-between\">\n          {params.get('query') ? (\n            <p className=\"text-xs pl-4 pt-2 text-zinc-400 font-light\">\n              {bookmarks.data.length} results\n            </p>\n          ) : (\n            <p className=\"text-xs pl-4 pt-2 text-zinc-400 font-light\">\n              showing {bookmarks.data.length} bookmarks\n            </p>\n          )}\n          <ClientOnly>\n            {() => (\n              <p className=\"text-xs pl-4 pt-2 text-zinc-400 font-light pr-4\">\n                {allBookmarks ? allBookmarks?.data?.length : 0} searchable\n                bookmarks\n              </p>\n            )}\n          </ClientOnly>\n        </div>\n      </div>\n\n      {!bookmarks.data.length && (\n        <p>There are no bookmarks found with your search...</p>\n      )}\n\n      {bookmarks.data.length > 0 &&\n        bookmarks.data.map((tweet: any) => {\n          const user = userLookup(tweet.author_id, bookmarks.includes.users)\n\n          const media = mediaLookup(\n            tweet?.attachments?.media_keys[0],\n            bookmarks.includes.media\n          )\n\n          return (\n            <Tweet\n              className=\"bg-white rouded shadow-md\"\n              name={user.user}\n              username={user.username}\n              media={media}\n              key={tweet.id}\n              profileImageUrl={user.profile_image_url}\n              verified={user.verified}\n              tweetId={tweet.id}\n              date={tweet.created_at}\n              text={tweet.text}\n            />\n          )\n        })}\n    </div>\n  )\n}\n\nexport default Bookmarks\n", "import React from 'react'\n\nconst TweetWrapper = ({\n  href,\n  children,\n  className,\n}: {\n  href: string | null\n  children: React.ReactNode\n  className: string\n}) => {\n  if (href) {\n    return (\n      <a href={href} className={className}>\n        {children}\n      </a>\n    )\n  } else {\n    return <div className={className}>{children}</div>\n  }\n}\n\ntype TweetProps = {\n  tweetId?: string\n  name: string\n  username: string\n  profileImageUrl: string\n  verified: Boolean\n  media: { type: string; url: string; height: number; width: number } | Boolean\n  text: string\n  date: Date\n  className?: string\n}\n\nexport const Tweet = ({\n  tweetId,\n  name,\n  username,\n  profileImageUrl,\n  verified,\n  media,\n  text,\n  date,\n  className,\n}: TweetProps) => {\n  return (\n    <TweetWrapper\n      href={\n        tweetId ? `https://twitter.com/${username}/status/${tweetId}` : null\n      }\n      className={[\n        'w-full p-4 pb-5.5 block flex space-x-3 bg-white rounded',\n        className,\n      ].join(' ')}\n    >\n      <div className=\"relative w-8 h-8 rounded-full bg-gray-100 overflow-hidden shrink-0\">\n        <img\n          className=\"absolute top-0 left-0 w-full h-full\"\n          src={profileImageUrl}\n          alt={`${username} profile`}\n        />\n      </div>\n      <div className=\"flex-col space-y-2\">\n        <header className=\"flex space-x-4 items-center pt-1.5\">\n          <div className=\"flex items-center space-x-1 text-sm\">\n            <h2>{name} </h2>\n            {verified && (\n              <img className=\"w-4 h-4 text-red\" src=\"/verified.svg\" alt=\"\" />\n            )}\n            <p>\n              @{username} \u00B7{' '}\n              {/* {new Date(tweet.created_at).toLocaleString()} */}\n              {new Date(date).toLocaleDateString(undefined, {\n                year: undefined,\n                month: 'long',\n                day: 'numeric',\n              })}\n            </p>\n          </div>\n        </header>\n        {media && media.type === 'photo' && (\n          <div\n            className=\"relative rounded-md overflow-hidden\"\n            style={{\n              paddingTop: `${(media.height / media.width) * 100}%`,\n            }}\n          >\n            <img\n              className=\"absolute top-0 left-0 w-full h-full\"\n              src={media.url}\n              alt=\"tweet media\"\n            />\n          </div>\n        )}\n\n        {media && media.type === 'video' && (\n          <div>\n            <p className=\"text-xs p-2 bg-blue-100 text-blue-600 rounded-sm\">\n              This tweet contains a video but Twitters Bookmark API doesnt\n              currently support grabbing their URL.\n            </p>\n          </div>\n        )}\n        <p>{text}</p>\n      </div>\n    </TweetWrapper>\n  )\n}\n", "import { useMatches } from '@remix-run/react';\nimport { useMemo } from 'react';\n\nexport const useMatchesData = (\n  id: string\n): Record<string, unknown> | undefined => {\n  const matchingRoutes = useMatches();\n  const route = useMemo(\n    () => matchingRoutes.find((route) => route.id === id),\n    [matchingRoutes, id]\n  );\n  return route?.data;\n};\n", "import type { HeadersFunction, LoaderFunction } from '@remix-run/node'\nimport { json, redirect } from '@remix-run/node'\nimport { Form, Outlet, useLoaderData, useSearchParams } from '@remix-run/react'\nimport { atomWithStorage } from 'jotai/utils'\nimport { getUser, logout } from '~/utils/session.server'\n\nexport const userLookup = (userId: string, users: any) =>\n  users.find((user) => user.id === userId)\n\nexport function headers() {\n  return {\n    'Cache-Control': 'public, max-age=30, s-maxage=86400',\n  }\n}\n\n// this is the atom we will use to store all of our bookmarks\nexport const allBookmarksAtom = atomWithStorage('allBookmarks', null)\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  try {\n    const user = await getUser(request)\n\n    if (!user) {\n      return redirect('/')\n    }\n\n    // check whether the access token has expired\n    if (new Date(user.expires_at) < new Date()) {\n      return logout(request)\n    }\n\n    const { id, access_token } = user\n\n    let bookmarks = {\n      data: [] as string[],\n      includes: {\n        users: [] as string[],\n        media: [] as string[],\n      },\n    }\n\n    const getBookmarks = async (token) => {\n      const bookmarksUrl = new URL(\n        `https://api.twitter.com/2/users/${id}/bookmarks`\n      )\n\n      if (token) {\n        bookmarksUrl.searchParams.append('pagination_token', token)\n      }\n\n      bookmarksUrl.searchParams.append(\n        'tweet.fields',\n        'context_annotations,created_at'\n      )\n      bookmarksUrl.searchParams.append(\n        'expansions',\n        'author_id,attachments.media_keys'\n      )\n      bookmarksUrl.searchParams.append(\n        'user.fields',\n        'verified,profile_image_url'\n      )\n      bookmarksUrl.searchParams.append('media.fields', 'type,url,width,height')\n\n      const response = await fetch(bookmarksUrl.toString(), {\n        headers: {\n          Accept: 'application/json',\n          'Content-type': 'application/json',\n          Authorization: `Bearer ${access_token}`,\n        },\n      })\n\n      const json = await response.json()\n\n      // bookmarks.data is an array so its easy peasy\n      bookmarks.data = [...bookmarks.data, ...json.data]\n      // bookmarks.includes is json so we need to do a little more fiddling\n      bookmarks.includes = {\n        ...bookmarks.includes,\n        users: [...bookmarks.includes.users, ...json.includes.users],\n        media: [...bookmarks.includes.media, ...json.includes.media],\n      }\n\n      if (json.meta.next_token) {\n        await getBookmarks(json.meta.next_token)\n      }\n    }\n\n    await getBookmarks('')\n\n    return json(\n      {\n        user,\n        bookmarks,\n      },\n      {\n        headers: {\n          // max-age controls the browser cache\n          // s-maxage controls a CDN cache\n          'Cache-Control': 'public, max-age=30, s-maxage=86400',\n        },\n      }\n    )\n  } catch (err) {\n    console.log(err)\n  }\n}\n\n// const getAllBookmarks = async (setAllBookmarks) => {\n//   try {\n//     const response = await fetch('/getAllBookmarks')\n//     const json = await response.json()\n//     setAllBookmarks(json)\n//     return\n//   } catch (err) {\n//     console.log(err)\n//   }\n// }\n\nconst Bookmarks = () => {\n  const data = useLoaderData()\n  const { bookmarks, user } = data\n  // const [params] = useSearchParams()\n  // const query = params.get('query')\n\n  if (!bookmarks) {\n    return <p>we couldnt grab your bookmarks!</p>\n  }\n\n  return (\n    <main className=\"relative bg-[#15202B] flex\">\n      <section className=\"relative self-start sticky top-0 bg-[url(/bg_texture.webp)] p-8 max-w-sm space-y-4\">\n        <div className=\"flex space-x-2 items-center\">\n          <img\n            className=\"rounded-full w-12 h-12 bg-gray-200\"\n            src={user.profile_image_url}\n            alt=\"avatar\"\n          />\n          <div className=\"flex flex-col text-white\">\n            <p className=\"text-sm\">@{user.username}</p>\n            <Form className=\"leading-none\" action=\"/logout\" method=\"post\">\n              <button\n                className=\"text-zinc-300 text-xs underline\"\n                name=\"logout\"\n                aria-label=\"logout\"\n              >\n                Logout\n              </button>\n            </Form>\n          </div>\n        </div>\n        <p className=\"text-white text-sm\">\n          Let's help you find your bookmarks quickly and easily! Use the filters\n          below or freestyle it in the search bar.\n        </p>\n        <h3 className=\"text-white\">Show tweets by user...</h3>\n        {/* <div className=\"flex flex-wrap gap-1\">\n          {Array.from(allUsernames)\n            .slice(0, 10)\n            .map((username, index) => (\n              <Link\n                className={[\n                  'border border-white rounded-full px-4 py-2 text-sm',\n                  query === username ? 'bg-white text-[#15202B]' : 'text-white',\n                ].join(' ')}\n                key={index}\n                to={`/bookmarks?query=${username}`}\n              >\n                @{username as string}\n              </Link>\n            ))}\n        </div> */}\n      </section>\n      <div>\n        <img className=\"sticky h-screen md:top-0\" src=\"/page_tear.svg\" alt=\"\" />\n      </div>\n      <section className=\"bg-white bg-[url(/bg_texture.webp)] bg-fixed grow py-8\">\n        <Outlet />\n      </section>\n    </main>\n  )\n}\n\nexport default Bookmarks\n", "import type { ActionFunction, LoaderFunction } from '@remix-run/node';\nimport { redirect } from '@remix-run/node';\nimport { logout } from '~/utils/session.server';\n\nexport const action: ActionFunction = async ({ request }) => {\n  return logout(request);\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  return logout(request);\n};\n", "import type { LoaderFunction } from '@remix-run/node'\nimport { json } from '@remix-run/node'\nimport { Form, Link, useLoaderData } from '@remix-run/react'\nimport { animate, spring, stagger } from 'motion'\nimport { useEffect } from 'react'\nimport { Tweet } from '~/components/Tweet'\nimport { getUser } from '~/utils/session.server'\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const user = await getUser(request)\n\n  return json({\n    user,\n  })\n}\n\nexport default function Index() {\n  const { user } = useLoaderData()\n\n  useEffect(() => {\n    // twitter icon\n    animate(\n      '.twitter-icon',\n      { opacity: [0, 1] },\n      {\n        duration: 0.45,\n        easing: 'ease-in',\n      }\n    )\n\n    // title\n    animate(\n      'h1.title',\n      { opacity: [0, 1] },\n      {\n        duration: 0.45,\n        delay: 0.5,\n        easing: 'ease-in',\n      }\n    )\n\n    // subcopy\n    animate(\n      'p.subcopy',\n      { opacity: [0, 1] },\n      {\n        duration: 0.45,\n        delay: 0.75,\n        easing: 'ease-in',\n      }\n    )\n\n    // button\n    animate(\n      '.button-wrapper',\n      { scale: [0.6, 1], opacity: 1 },\n      { delay: 1.25, easing: spring() }\n    )\n  }, [])\n\n  return (\n    <main className=\"relative bg-[#15202B] flex flex-col-reverse md:flex-row md:children:basis-1/2 md:min-h-screen\">\n      <div className=\"flex pt-64 md:pt-0 relative overflow-hidden w-full\">\n        <img\n          className=\"self-end block h-auto\"\n          src=\"/half_tone_img.webp\"\n          alt=\"\"\n        />\n        <img\n          className=\"absolute hidden md:block md:rotate-0 md:top-0 md:bottom-0 md:right-[-2px]\"\n          src=\"/page_tear.svg\"\n          alt=\"\"\n        />\n        <img\n          className=\"absolute -top-[2px] left-0 w-full md:hidden rotate-180\"\n          src=\"/page_tear_h.svg\"\n          alt=\"\"\n        />\n        <img\n          className=\"absolute top-0 left-0 w-full h-full\"\n          src=\"/bg_texture.webp\"\n          alt=\"\"\n        />\n        <Tweet\n          className=\"!w-[90%] max-w-sm absolute top-2/12 md:top-1/8 left-1/2 md:left-[calc(50%-24px)] -translate-x-1/2\"\n          name=\"Mountain Dave\"\n          username=\"mountaindave\"\n          media={false}\n          profileImageUrl={'/avatar.jpg'}\n          verified={true}\n          date={new Date()}\n          text=\"Beautiful scenes up here near Unsplash mountain, taking a deep breathe and relishing the moment.\"\n        />\n      </div>\n      <div\n        className=\"py-16 md:py-0 relative bg-white md:self-stretch flex flex-col items-center justify-center space-y-3 bg-cover\"\n        style={{ backgroundImage: \"url('/bg_texture.webp')\" }}\n      >\n        <div className=\"twitter-icon opacity-0\">\n          <svg\n            width=\"133\"\n            height=\"133\"\n            viewBox=\"0 0 133 133\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M130.536 27.6535C125.944 29.6885 121.011 31.0635 115.824 31.685C121.115 28.517 125.174 23.49 127.088 17.506C122.138 20.443 116.655 22.577 110.819 23.721C106.144 18.749 99.489 15.636 92.119 15.636C77.973 15.636 66.5 27.109 66.5 41.266C66.5 43.268 66.731 45.215 67.16 47.096C45.8585 46.0235 26.988 35.821 14.349 20.322C12.149 24.117 10.884 28.517 10.884 33.203C10.884 42.091 15.4105 49.9395 22.28 54.532C18.078 54.3945 14.129 53.245 10.675 51.3255V51.6555C10.675 64.069 19.5025 74.4255 31.2285 76.7795C29.0725 77.3625 26.812 77.6705 24.48 77.6705C22.83 77.6705 21.2185 77.5165 19.6565 77.2195C22.918 87.3945 32.378 94.8085 43.5925 95.0065C34.82 101.882 23.7705 105.979 11.7695 105.979C9.7015 105.979 7.661 105.858 5.6535 105.622C16.9945 112.898 30.4585 117.133 44.9235 117.133C92.0585 117.133 117.826 78.094 117.826 44.236C117.826 43.136 117.799 42.025 117.749 40.925C122.754 37.306 127.099 32.8015 130.526 27.67L130.536 27.6535Z\"\n              fill=\"#1D9BF0\"\n            />\n          </svg>\n        </div>\n        <h1 className=\"title opacity-0 text-3xl font-semibold\">\n          Twitter Bookmarks\n        </h1>\n        <p className=\"subcopy opacity-0 text-lg text-center\">\n          The easiest way to find and search\n          <br />\n          bookmarks you\u2019ve saved\n        </p>\n        <div className=\"button-wrapper pt-4 opacity-0\">\n          {user && new Date(user.expires_at) > new Date() ? (\n            <Link to=\"/bookmarks\">\n              <button className=\"rounded-full bg-[#1d9bf0] text-white py-3 px-6 hover:bg-[#1a8cd8]\">\n                Go to your bookmarks\n              </button>\n            </Link>\n          ) : (\n            <Form method=\"post\" action=\"/login\">\n              <button\n                className=\"rounded-full bg-[#1d9bf0] text-white py-3 px-6 hover:bg-[#1a8cd8]\"\n                name=\"action\"\n                value=\"login\"\n              >\n                Login\n              </button>\n            </Form>\n          )}\n        </div>\n      </div>\n    </main>\n  )\n}\n", "import { redirect } from '@remix-run/server-runtime';\nimport type { ActionFunction } from '@remix-run/server-runtime';\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const action = formData.get('action');\n\n  if (action === 'login') {\n    return redirect(\n      `https://twitter.com/i/oauth2/authorize?response_type=code&client_id=${process.env.TWITTER_CLIENT_ID}&redirect_uri=${process.env.TWITTER_REDIRECT_URI}&scope=tweet.read%20users.read%20bookmark.read%20follows.read%20offline.access&state=state&code_challenge=challenge&code_challenge_method=plain`\n    );\n  }\n};\n", "export default {'version':'7c034f2d','entry':{'module':'/build/entry.client-ULSXSZS4.js','imports':['/build/_shared/chunk-XEDVP4FO.js','/build/_shared/chunk-6BO74FWO.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-DDM3IGNX.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/bookmarks':{'id':'routes/bookmarks','parentId':'root','path':'bookmarks','index':undefined,'caseSensitive':undefined,'module':'/build/routes/bookmarks-UFBQJ7HL.js','imports':['/build/_shared/chunk-NCDNMNBJ.js','/build/_shared/chunk-GK56CZJG.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/bookmarks/index':{'id':'routes/bookmarks/index','parentId':'routes/bookmarks','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/bookmarks/index-VAC5WE6N.js','imports':['/build/_shared/chunk-H2WL6QYV.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/getAllBookmarks':{'id':'routes/getAllBookmarks','parentId':'root','path':'getAllBookmarks','index':undefined,'caseSensitive':undefined,'module':'/build/routes/getAllBookmarks-6QSMEIVH.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-BUKQAJEY.js','imports':['/build/_shared/chunk-H2WL6QYV.js','/build/_shared/chunk-GK56CZJG.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-PJXYFPD5.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login.callback':{'id':'routes/login.callback','parentId':'root','path':'login/callback','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login.callback-OFIMSWSN.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-KNUK42I3.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-7C034F2D.js'};", "\nimport * as entryServer from \"/Users/adam.collier/Desktop/remix-twitter-bookmarks/app/entry.server.tsx\";\nimport * as route0 from \"/Users/adam.collier/Desktop/remix-twitter-bookmarks/app/root.tsx\";\nimport * as route1 from \"/Users/adam.collier/Desktop/remix-twitter-bookmarks/app/routes/getAllBookmarks.tsx\";\nimport * as route2 from \"/Users/adam.collier/Desktop/remix-twitter-bookmarks/app/routes/login.callback.tsx\";\nimport * as route3 from \"/Users/adam.collier/Desktop/remix-twitter-bookmarks/app/routes/bookmarks.tsx\";\nimport * as route4 from \"/Users/adam.collier/Desktop/remix-twitter-bookmarks/app/routes/bookmarks/index.tsx\";\nimport * as route5 from \"/Users/adam.collier/Desktop/remix-twitter-bookmarks/app/routes/logout.tsx\";\nimport * as route6 from \"/Users/adam.collier/Desktop/remix-twitter-bookmarks/app/routes/index.tsx\";\nimport * as route7 from \"/Users/adam.collier/Desktop/remix-twitter-bookmarks/app/routes/login.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/getAllBookmarks\": {\n      id: \"routes/getAllBookmarks\",\n      parentId: \"root\",\n      path: \"getAllBookmarks\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/login.callback\": {\n      id: \"routes/login.callback\",\n      parentId: \"root\",\n      path: \"login/callback\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/bookmarks\": {\n      id: \"routes/bookmarks\",\n      parentId: \"root\",\n      path: \"bookmarks\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/bookmarks/index\": {\n      id: \"routes/bookmarks/index\",\n      parentId: \"routes/bookmarks\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    }\n  };"],
  "mappings": "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",
  "names": []
}
