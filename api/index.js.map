{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "/Users/Adam/Desktop/twitter-app/app/root.tsx", "/Users/Adam/Desktop/twitter-app/app/routes/login.callback.tsx", "../app/utils/session.server.ts", "/Users/Adam/Desktop/twitter-app/app/routes/bookmarks.tsx", "/Users/Adam/Desktop/twitter-app/app/routes/logout.tsx", "/Users/Adam/Desktop/twitter-app/app/routes/index.tsx", "/Users/Adam/Desktop/twitter-app/app/routes/login.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type { MetaFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"New Remix App\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import { LoaderFunction, redirect } from '@remix-run/server-runtime';\nimport { createTwitterSession } from '~/utils/session.server';\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  // grab the code we get in the callback\n  const requestUrl = new URL(request.url);\n  const code = requestUrl.searchParams.get('code');\n\n  if (!code) {\n    return redirect('/');\n  }\n  // create the params we will need;\n  const url = 'https://api.twitter.com/2/oauth2/token';\n  const params = new URLSearchParams();\n  params.append('grant_type', 'authorization_code');\n  params.append('client_id', process.env.TWITTER_CLIENT_ID as string);\n  params.append('redirect_uri', process.env.TWITTER_REDIRECT_URI as string);\n  params.append('code_verifier', 'challenge');\n  params.append('code', code);\n\n  // fetch the access token\n  const tokenResponse = await fetch(url, {\n    method: 'POST',\n    body: params,\n  });\n\n  // get the JSON\n  const tokenJSON = await tokenResponse.json();\n\n  // using the token we can now get the user\n  const userResponse = await fetch('https://api.twitter.com/2/users/me', {\n    headers: {\n      Accept: 'application/json',\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${tokenJSON.access_token}`,\n    },\n  });\n\n  const { data: userJSON } = await userResponse.json();\n\n  const user = {\n    ...tokenJSON,\n    expires_at: new Date().getTime() + tokenJSON.expires_in * 1000,\n    ...userJSON,\n  };\n\n  return createTwitterSession(user, '/bookmarks');\n};\n", "import { createCookieSessionStorage, redirect } from '@remix-run/node';\n\nconst sessionSecret = process.env.SESSION_SECRET;\nif (!sessionSecret) {\n  throw new Error('SESSION_SECRET must be set');\n}\n\nconst sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: 'twitter_session',\n    // normally you want this to be `secure: true`\n    // but that doesn't work on localhost for Safari\n    // https://web.dev/when-to-use-local-https/\n    secure: process.env.NODE_ENV === 'production',\n    secrets: [sessionSecret],\n    sameSite: 'lax',\n    path: '/',\n    maxAge: 60 * 60 * 24 * 30,\n    httpOnly: true,\n  },\n});\n\ntype User = {\n  access_token: string;\n  id: string;\n  name: string;\n  username: string;\n};\n\nexport async function createTwitterSession(user: User, redirectTo: string) {\n  const session = await sessionStorage.getSession();\n  session.set('user', user);\n  return redirect(redirectTo, {\n    headers: {\n      'Set-Cookie': await sessionStorage.commitSession(session),\n    },\n  });\n}\n\nexport async function getSession(request: Request) {\n  const cookie = request.headers.get('Cookie');\n  return sessionStorage.getSession(cookie);\n}\n\nexport async function getUser(\n  request: Request\n): Promise<User | Response | null> {\n  const session = await getSession(request);\n  const user = session.get('user');\n\n  // if there is no user return null\n  if (!user) return null;\n\n  // check whether the access token has expired\n  // if it has logout so the user can log in again\n  if (new Date(user.expires_at) < new Date()) {\n    return redirect('/', {\n      headers: {\n        'Set-Cookie': await sessionStorage.destroySession(session),\n      },\n    });\n  }\n\n  return user;\n}\n\nexport const logout = async (request: Request) => {\n  const session = await getSession(request);\n  return redirect('/', {\n    headers: {\n      'Set-Cookie': await sessionStorage.destroySession(session),\n    },\n  });\n};\n", "import { json, LoaderFunction, redirect } from '@remix-run/node';\nimport { Form, useLoaderData } from '@remix-run/react';\nimport { getUser } from '~/utils/session.server';\nimport { useMatchesData } from '~/utils/utils';\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const user = await getUser(request);\n\n  if (!user) {\n    return redirect('/');\n  }\n\n  const { id, access_token } = user;\n\n  const bookmarksUrl = new URL(\n    `https://api.twitter.com/2/users/${id}/bookmarks`\n  );\n\n  bookmarksUrl.searchParams.append(\n    'tweet.fields',\n    'context_annotations,created_at'\n  );\n  bookmarksUrl.searchParams.append(\n    'expansions',\n    'author_id,attachments.media_keys'\n  );\n  bookmarksUrl.searchParams.append('user.fields', 'verified,profile_image_url');\n  bookmarksUrl.searchParams.append('media.fields', 'type,url');\n\n  try {\n    const response = await fetch(bookmarksUrl.toString(), {\n      headers: {\n        Accept: 'application/json',\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${access_token}`,\n      },\n    });\n\n    const bookmarks = await response.json();\n\n    return json({\n      user,\n      bookmarks,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst userLookup = (userId: string, users: any) =>\n  users.find((user) => user.id === userId);\n\nconst mediaLookup = (mediaId: string, mediaList: any) =>\n  mediaList.find((media) => media.media_key === mediaId);\n\nconst Bookmarks = () => {\n  const data = useLoaderData();\n  const { bookmarks } = data;\n  console.log(data);\n\n  if (!bookmarks) {\n    return <p>we couldnt grab your bookmarks!</p>;\n  }\n\n  return (\n    <main>\n      <p>this is the bookmarks page</p>\n      <Form action=\"/logout\" method=\"post\">\n        <button\n          name=\"logout\"\n          className=\"rounded-full bg-gray-100 p-3 hover:bg-gray-200\"\n          aria-label=\"logout\"\n        >\n          Logout\n        </button>\n      </Form>\n\n      <div>\n        {bookmarks.data.map((tweet, index) => {\n          const user = userLookup(tweet.author_id, bookmarks.includes.users);\n\n          const media = mediaLookup(\n            tweet?.attachments?.media_keys[0],\n            bookmarks.includes.media\n          );\n          console.log(media, media?.type, 'this is the media');\n\n          return (\n            <a\n              key={index}\n              href={`https://twitter.com/${user.username}/status/${tweet.id}`}\n            >\n              <header>\n                <img\n                  src={user.profile_image_url}\n                  alt={`${user.username} profile`}\n                />\n                <h2>\n                  {user.name} {user.verified ? 'true' : 'false'}\n                </h2>\n              </header>\n              {media && media.type === 'photo' && (\n                <img src={media.url} alt=\"tweet media\" />\n              )}\n\n              {media && media.type === 'video' && (\n                <div>\n                  <p>\n                    This tweet contains a video but Twitters Bookmark API doesnt\n                    currently support grabbing their URL.\n                  </p>\n                </div>\n              )}\n\n              <h2>@{user.username}</h2>\n              <p>{tweet.text}</p>\n\n              <div>\n                <span>{new Date(tweet.created_at).toLocaleString()}</span>\n              </div>\n            </a>\n          );\n        })}\n      </div>\n    </main>\n  );\n};\n\nexport default Bookmarks;\n", "import type { ActionFunction, LoaderFunction } from '@remix-run/node';\nimport { redirect } from '@remix-run/node';\nimport { logout } from '~/utils/session.server';\n\nexport const action: ActionFunction = async ({ request }) => {\n  return logout(request);\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  return logout(request);\n};\n", "import { json, LoaderFunction } from '@remix-run/node';\nimport { Form, Link, useLoaderData } from '@remix-run/react';\nimport { getUser } from '~/utils/session.server';\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const user = await getUser(request);\n\n  return json({\n    user,\n  });\n};\n\nexport default function Index() {\n  const { user } = useLoaderData();\n\n  return (\n    <main className=\"relative min-h-screen bg-white sm:flex sm:items-center sm:justify-center\">\n      {user ? (\n        <Link to=\"/bookmarks\">\n          <button>Go to your bookmarks</button>\n        </Link>\n      ) : (\n        <Form method=\"post\" action=\"/login\">\n          <button name=\"action\" value=\"login\">\n            Login\n          </button>\n        </Form>\n      )}\n    </main>\n  );\n}\n", "import { redirect } from '@remix-run/server-runtime';\nimport type { ActionFunction } from '@remix-run/server-runtime';\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const action = formData.get('action');\n\n  if (action === 'login') {\n    return redirect(\n      `https://twitter.com/i/oauth2/authorize?response_type=code&client_id=${process.env.TWITTER_CLIENT_ID}&redirect_uri=${process.env.TWITTER_REDIRECT_URI}&scope=tweet.read%20users.read%20bookmark.read%20follows.read%20offline.access&state=state&code_challenge=challenge&code_challenge_method=plain`\n    );\n  }\n};\n", "export default {'version':'8b6a4611','entry':{'module':'/build/entry.client-MEXU3TX5.js','imports':['/build/_shared/chunk-I7Q5U5FJ.js','/build/_shared/chunk-6BO74FWO.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-DU2YWVTE.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/bookmarks':{'id':'routes/bookmarks','parentId':'root','path':'bookmarks','index':undefined,'caseSensitive':undefined,'module':'/build/routes/bookmarks-GOIIO53Y.js','imports':['/build/_shared/chunk-GK56CZJG.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-ZSUREAH5.js','imports':['/build/_shared/chunk-GK56CZJG.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-KAAAD7XJ.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login.callback':{'id':'routes/login.callback','parentId':'root','path':'login/callback','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login.callback-VZ4PRL53.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-ALSQZVNS.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-8B6A4611.js'};", "\nimport * as entryServer from \"/Users/Adam/Desktop/twitter-app/app/entry.server.tsx\";\nimport * as route0 from \"/Users/Adam/Desktop/twitter-app/app/root.tsx\";\nimport * as route1 from \"/Users/Adam/Desktop/twitter-app/app/routes/login.callback.tsx\";\nimport * as route2 from \"/Users/Adam/Desktop/twitter-app/app/routes/bookmarks.tsx\";\nimport * as route3 from \"/Users/Adam/Desktop/twitter-app/app/routes/logout.tsx\";\nimport * as route4 from \"/Users/Adam/Desktop/twitter-app/app/routes/index.tsx\";\nimport * as route5 from \"/Users/Adam/Desktop/twitter-app/app/routes/login.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/login.callback\": {\n      id: \"routes/login.callback\",\n      parentId: \"root\",\n      path: \"login/callback\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/bookmarks\": {\n      id: \"routes/bookmarks\",\n      parentId: \"root\",\n      path: \"bookmarks\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    }\n  };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACCA,YAAuB;;;ACDvB;AAAA;AAAA;AAAA;AACA,mBAA4B;AAC5B,oBAA+B;AAEhB,uBACb,SACA,oBACA,iBACA,cACA;AACA,MAAI,SAAS,kCACX,oCAAC,0BAAD;AAAA,IAAa,SAAS;AAAA,IAAc,KAAK,QAAQ;AAAA;AAGnD,kBAAgB,IAAI,gBAAgB;AAEpC,SAAO,IAAI,SAAS,oBAAoB,QAAQ;AAAA,IAC9C,QAAQ;AAAA,IACR,SAAS;AAAA;AAAA;;;AClBb;AAAA;AAAA;AAAA;AAAA;AACA,oBAOO;AAEA,IAAM,OAAqB,MAAO;AAAA,EACvC,SAAS;AAAA,EACT,OAAO;AAAA,EACP,UAAU;AAAA;AAGG,eAAe;AAC5B,SACE,oCAAC,QAAD;AAAA,IAAM,MAAK;AAAA,KACT,oCAAC,QAAD,MACE,oCAAC,oBAAD,OACA,oCAAC,qBAAD,QAEF,oCAAC,QAAD,MACE,oCAAC,sBAAD,OACA,oCAAC,iCAAD,OACA,oCAAC,uBAAD,OACA,oCAAC,0BAAD;AAAA;;;AC3BR;AAAA;AAAA;AAAA;AAAA,4BAAyC;;;ACAzC,kBAAqD;AAErD,IAAM,gBAAgB,QAAQ,IAAI;AAClC,IAAI,CAAC,eAAe;AAClB,QAAM,IAAI,MAAM;AAAA;AAGlB,IAAM,iBAAiB,4CAA2B;AAAA,EAChD,QAAQ;AAAA,IACN,MAAM;AAAA,IAIN,QAAQ;AAAA,IACR,SAAS,CAAC;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,QAAQ,KAAK,KAAK,KAAK;AAAA,IACvB,UAAU;AAAA;AAAA;AAWd,oCAA2C,MAAY,YAAoB;AACzE,QAAM,UAAU,MAAM,eAAe;AACrC,UAAQ,IAAI,QAAQ;AACpB,SAAO,0BAAS,YAAY;AAAA,IAC1B,SAAS;AAAA,MACP,cAAc,MAAM,eAAe,cAAc;AAAA;AAAA;AAAA;AAKvD,0BAAiC,SAAkB;AACjD,QAAM,SAAS,QAAQ,QAAQ,IAAI;AACnC,SAAO,eAAe,WAAW;AAAA;AAGnC,uBACE,SACiC;AACjC,QAAM,UAAU,MAAM,WAAW;AACjC,QAAM,OAAO,QAAQ,IAAI;AAGzB,MAAI,CAAC;AAAM,WAAO;AAIlB,MAAI,IAAI,KAAK,KAAK,cAAc,IAAI,QAAQ;AAC1C,WAAO,0BAAS,KAAK;AAAA,MACnB,SAAS;AAAA,QACP,cAAc,MAAM,eAAe,eAAe;AAAA;AAAA;AAAA;AAKxD,SAAO;AAAA;AAGF,IAAM,SAAS,OAAO,YAAqB;AAChD,QAAM,UAAU,MAAM,WAAW;AACjC,SAAO,0BAAS,KAAK;AAAA,IACnB,SAAS;AAAA,MACP,cAAc,MAAM,eAAe,eAAe;AAAA;AAAA;AAAA;;;ADnEjD,IAAM,SAAyB,OAAO,EAAE,cAAc;AAE3D,QAAM,aAAa,IAAI,IAAI,QAAQ;AACnC,QAAM,OAAO,WAAW,aAAa,IAAI;AAEzC,MAAI,CAAC,MAAM;AACT,WAAO,oCAAS;AAAA;AAGlB,QAAM,MAAM;AACZ,QAAM,SAAS,IAAI;AACnB,SAAO,OAAO,cAAc;AAC5B,SAAO,OAAO,aAAa,QAAQ,IAAI;AACvC,SAAO,OAAO,gBAAgB,QAAQ,IAAI;AAC1C,SAAO,OAAO,iBAAiB;AAC/B,SAAO,OAAO,QAAQ;AAGtB,QAAM,gBAAgB,MAAM,MAAM,KAAK;AAAA,IACrC,QAAQ;AAAA,IACR,MAAM;AAAA;AAIR,QAAM,YAAY,MAAM,cAAc;AAGtC,QAAM,eAAe,MAAM,MAAM,sCAAsC;AAAA,IACrE,SAAS;AAAA,MACP,QAAQ;AAAA,MACR,gBAAgB;AAAA,MAChB,eAAe,UAAU,UAAU;AAAA;AAAA;AAIvC,QAAM,EAAE,MAAM,aAAa,MAAM,aAAa;AAE9C,QAAM,OAAO,gDACR,YADQ;AAAA,IAEX,YAAY,IAAI,OAAO,YAAY,UAAU,aAAa;AAAA,MACvD;AAGL,SAAO,qBAAqB,MAAM;AAAA;;;AE9CpC;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA+C;AAC/C,oBAAoC;AAI7B,IAAM,UAAyB,OAAO,EAAE,cAAc;AAC3D,QAAM,OAAO,MAAM,QAAQ;AAE3B,MAAI,CAAC,MAAM;AACT,WAAO,2BAAS;AAAA;AAGlB,QAAM,EAAE,IAAI,iBAAiB;AAE7B,QAAM,eAAe,IAAI,IACvB,mCAAmC;AAGrC,eAAa,aAAa,OACxB,gBACA;AAEF,eAAa,aAAa,OACxB,cACA;AAEF,eAAa,aAAa,OAAO,eAAe;AAChD,eAAa,aAAa,OAAO,gBAAgB;AAEjD,MAAI;AACF,UAAM,WAAW,MAAM,MAAM,aAAa,YAAY;AAAA,MACpD,SAAS;AAAA,QACP,QAAQ;AAAA,QACR,gBAAgB;AAAA,QAChB,eAAe,UAAU;AAAA;AAAA;AAI7B,UAAM,YAAY,MAAM,SAAS;AAEjC,WAAO,uBAAK;AAAA,MACV;AAAA,MACA;AAAA;AAAA,WAEK,KAAP;AACA,YAAQ,IAAI;AAAA;AAAA;AAIhB,IAAM,aAAa,CAAC,QAAgB,UAClC,MAAM,KAAK,CAAC,SAAS,KAAK,OAAO;AAEnC,IAAM,cAAc,CAAC,SAAiB,cACpC,UAAU,KAAK,CAAC,UAAU,MAAM,cAAc;AAEhD,IAAM,YAAY,MAAM;AACtB,QAAM,OAAO;AACb,QAAM,EAAE,cAAc;AACtB,UAAQ,IAAI;AAEZ,MAAI,CAAC,WAAW;AACd,WAAO,oCAAC,KAAD,MAAG;AAAA;AAGZ,SACE,oCAAC,QAAD,MACE,oCAAC,KAAD,MAAG,+BACH,oCAAC,oBAAD;AAAA,IAAM,QAAO;AAAA,IAAU,QAAO;AAAA,KAC5B,oCAAC,UAAD;AAAA,IACE,MAAK;AAAA,IACL,WAAU;AAAA,IACV,cAAW;AAAA,KACZ,YAKH,oCAAC,OAAD,MACG,UAAU,KAAK,IAAI,CAAC,OAAO,UAAU;AA9E9C;AA+EU,UAAM,OAAO,WAAW,MAAM,WAAW,UAAU,SAAS;AAE5D,UAAM,QAAQ,YACZ,qCAAO,gBAAP,mBAAoB,WAAW,IAC/B,UAAU,SAAS;AAErB,YAAQ,IAAI,OAAO,+BAAO,MAAM;AAEhC,WACE,oCAAC,KAAD;AAAA,MACE,KAAK;AAAA,MACL,MAAM,uBAAuB,KAAK,mBAAmB,MAAM;AAAA,OAE3D,oCAAC,UAAD,MACE,oCAAC,OAAD;AAAA,MACE,KAAK,KAAK;AAAA,MACV,KAAK,GAAG,KAAK;AAAA,QAEf,oCAAC,MAAD,MACG,KAAK,MAAK,KAAE,KAAK,WAAW,SAAS,WAGzC,SAAS,MAAM,SAAS,WACvB,oCAAC,OAAD;AAAA,MAAK,KAAK,MAAM;AAAA,MAAK,KAAI;AAAA,QAG1B,SAAS,MAAM,SAAS,WACvB,oCAAC,OAAD,MACE,oCAAC,KAAD,MAAG,wGAOP,oCAAC,MAAD,MAAI,KAAE,KAAK,WACX,oCAAC,KAAD,MAAI,MAAM,OAEV,oCAAC,OAAD,MACE,oCAAC,QAAD,MAAO,IAAI,KAAK,MAAM,YAAY;AAAA;AAAA;AAUlD,IAAO,oBAAQ;;;AChIf;AAAA;AAAA;AAAA;AAAA;AAIO,IAAM,SAAyB,OAAO,EAAE,cAAc;AAC3D,SAAO,OAAO;AAAA;AAGT,IAAM,UAAyB,OAAO,EAAE,cAAc;AAC3D,SAAO,OAAO;AAAA;;;ACThB;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAqC;AACrC,oBAA0C;AAGnC,IAAM,UAAyB,OAAO,EAAE,cAAc;AAC3D,QAAM,OAAO,MAAM,QAAQ;AAE3B,SAAO,uBAAK;AAAA,IACV;AAAA;AAAA;AAIW,iBAAiB;AAC9B,QAAM,EAAE,SAAS;AAEjB,SACE,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACb,OACC,oCAAC,oBAAD;AAAA,IAAM,IAAG;AAAA,KACP,oCAAC,UAAD,MAAQ,2BAGV,oCAAC,oBAAD;AAAA,IAAM,QAAO;AAAA,IAAO,QAAO;AAAA,KACzB,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,IAAS,OAAM;AAAA,KAAQ;AAAA;;;ACvB9C;AAAA;AAAA;AAAA;AAAA,6BAAyB;AAGlB,IAAM,UAAyB,OAAO,EAAE,cAAc;AAC3D,QAAM,WAAW,MAAM,QAAQ;AAC/B,QAAM,UAAS,SAAS,IAAI;AAE5B,MAAI,YAAW,SAAS;AACtB,WAAO,qCACL,uEAAuE,QAAQ,IAAI,kCAAkC,QAAQ,IAAI;AAAA;AAAA;;;ACTvI,IAAO,0BAAQ,EAAC,WAAU,YAAW,SAAQ,EAAC,UAAS,mCAAkC,WAAU,CAAC,oCAAmC,uCAAqC,UAAS,EAAC,QAAO,EAAC,MAAK,QAAO,YAAW,QAAU,QAAO,IAAG,SAAQ,QAAU,iBAAgB,QAAU,UAAS,2BAA0B,WAAU,QAAU,aAAY,OAAM,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,SAAO,oBAAmB,EAAC,MAAK,oBAAmB,YAAW,QAAO,QAAO,aAAY,SAAQ,QAAU,iBAAgB,QAAU,UAAS,uCAAsC,WAAU,CAAC,qCAAoC,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,gBAAe,EAAC,MAAK,gBAAe,YAAW,QAAO,QAAO,QAAU,SAAQ,MAAK,iBAAgB,QAAU,UAAS,mCAAkC,WAAU,CAAC,qCAAoC,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,gBAAe,EAAC,MAAK,gBAAe,YAAW,QAAO,QAAO,SAAQ,SAAQ,QAAU,iBAAgB,QAAU,UAAS,mCAAkC,WAAU,QAAU,aAAY,MAAK,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,SAAO,yBAAwB,EAAC,MAAK,yBAAwB,YAAW,QAAO,QAAO,kBAAiB,SAAQ,QAAU,iBAAgB,QAAU,UAAS,4CAA2C,WAAU,QAAU,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,iBAAgB,EAAC,MAAK,iBAAgB,YAAW,QAAO,QAAO,UAAS,SAAQ,QAAU,iBAAgB,QAAU,UAAS,oCAAmC,WAAU,QAAU,aAAY,MAAK,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,WAAQ,OAAM;;;ACSzyD,IAAM,QAAQ,EAAE,QAAQ;AACxB,IAAM,SAAS;AAAA,EACpB,QAAQ;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,yBAAyB;AAAA,IACrB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,oBAAoB;AAAA,IAChB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,iBAAiB;AAAA,IACb,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,gBAAgB;AAAA,IACZ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,gBAAgB;AAAA,IACZ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA;",
  "names": []
}
